// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace lazIR_tag {
      template <typename>
PROTOBUF_CONSTEXPR GetRecordResponse_ScoreEntry_DoNotUse::GetRecordResponse_ScoreEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GetRecordResponse_ScoreEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordResponse_ScoreEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordResponse_ScoreEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetRecordResponse_ScoreEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordResponse_ScoreEntry_DoNotUseDefaultTypeInternal _GetRecordResponse_ScoreEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetRecordRequest::GetRecordRequest(::_pbi::ConstantInitialized) {}
struct GetRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordRequestDefaultTypeInternal() {}
  union {
    GetRecordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordRequestDefaultTypeInternal _GetRecordRequest_default_instance_;

inline constexpr AddRecordResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : commit_index_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddRecordResponse::AddRecordResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRecordResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRecordResponseDefaultTypeInternal() {}
  union {
    AddRecordResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRecordResponseDefaultTypeInternal _AddRecordResponse_default_instance_;

inline constexpr AddRecordRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shooter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        victim_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddRecordRequest::AddRecordRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRecordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRecordRequestDefaultTypeInternal() {}
  union {
    AddRecordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRecordRequestDefaultTypeInternal _AddRecordRequest_default_instance_;

inline constexpr GetRecordResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : score_{},
        read_at_index_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetRecordResponse::GetRecordResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordResponseDefaultTypeInternal() {}
  union {
    GetRecordResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordResponseDefaultTypeInternal _GetRecordResponse_default_instance_;
}  // namespace lazIR_tag
static ::_pb::Metadata file_level_metadata_service_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_service_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_service_2eproto = nullptr;
const ::uint32_t TableStruct_service_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::AddRecordRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::AddRecordRequest, _impl_.shooter_),
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::AddRecordRequest, _impl_.victim_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::AddRecordResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::AddRecordResponse, _impl_.commit_index_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse_ScoreEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse_ScoreEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse_ScoreEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse_ScoreEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse, _impl_.read_at_index_),
    PROTOBUF_FIELD_OFFSET(::lazIR_tag::GetRecordResponse, _impl_.score_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::lazIR_tag::AddRecordRequest)},
        {10, -1, -1, sizeof(::lazIR_tag::AddRecordResponse)},
        {19, -1, -1, sizeof(::lazIR_tag::GetRecordRequest)},
        {27, 37, -1, sizeof(::lazIR_tag::GetRecordResponse_ScoreEntry_DoNotUse)},
        {39, -1, -1, sizeof(::lazIR_tag::GetRecordResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::lazIR_tag::_AddRecordRequest_default_instance_._instance,
    &::lazIR_tag::_AddRecordResponse_default_instance_._instance,
    &::lazIR_tag::_GetRecordRequest_default_instance_._instance,
    &::lazIR_tag::_GetRecordResponse_ScoreEntry_DoNotUse_default_instance_._instance,
    &::lazIR_tag::_GetRecordResponse_default_instance_._instance,
};
const char descriptor_table_protodef_service_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rservice.proto\022\tlazIR_tag\"3\n\020AddRecordR"
    "equest\022\017\n\007shooter\030\001 \001(\t\022\016\n\006victim\030\002 \001(\t\""
    ")\n\021AddRecordResponse\022\024\n\014commit_index\030\001 \001"
    "(\004\"\022\n\020GetRecordRequest\"\220\001\n\021GetRecordResp"
    "onse\022\025\n\rread_at_index\030\001 \001(\004\0226\n\005score\030\002 \003"
    "(\0132\'.lazIR_tag.GetRecordResponse.ScoreEn"
    "try\032,\n\nScoreEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
    "\002 \001(\005:\0028\0012\233\001\n\005Score\022H\n\tAddRecord\022\033.lazIR"
    "_tag.AddRecordRequest\032\034.lazIR_tag.AddRec"
    "ordResponse\"\000\022H\n\tGetRecord\022\033.lazIR_tag.G"
    "etRecordRequest\032\034.lazIR_tag.GetRecordRes"
    "ponse\"\000B,Z*github.com/Darkhunter9/lazIR_"
    "tag/src/protob\006proto3"
};
static ::absl::once_flag descriptor_table_service_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_service_2eproto = {
    false,
    false,
    501,
    descriptor_table_protodef_service_2eproto,
    "service.proto",
    &descriptor_table_service_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_service_2eproto::offsets,
    file_level_metadata_service_2eproto,
    file_level_enum_descriptors_service_2eproto,
    file_level_service_descriptors_service_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_service_2eproto_getter() {
  return &descriptor_table_service_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_service_2eproto(&descriptor_table_service_2eproto);
namespace lazIR_tag {
// ===================================================================

class AddRecordRequest::_Internal {
 public:
};

AddRecordRequest::AddRecordRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lazIR_tag.AddRecordRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddRecordRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : shooter_(arena, from.shooter_),
        victim_(arena, from.victim_),
        _cached_size_{0} {}

AddRecordRequest::AddRecordRequest(
    ::google::protobuf::Arena* arena,
    const AddRecordRequest& from)
    : ::google::protobuf::Message(arena) {
  AddRecordRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:lazIR_tag.AddRecordRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddRecordRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shooter_(arena),
        victim_(arena),
        _cached_size_{0} {}

inline void AddRecordRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddRecordRequest::~AddRecordRequest() {
  // @@protoc_insertion_point(destructor:lazIR_tag.AddRecordRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddRecordRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.shooter_.Destroy();
  _impl_.victim_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AddRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lazIR_tag.AddRecordRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shooter_.ClearToEmpty();
  _impl_.victim_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AddRecordRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> AddRecordRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddRecordRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string victim = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddRecordRequest, _impl_.victim_)}},
    // string shooter = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddRecordRequest, _impl_.shooter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string shooter = 1;
    {PROTOBUF_FIELD_OFFSET(AddRecordRequest, _impl_.shooter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string victim = 2;
    {PROTOBUF_FIELD_OFFSET(AddRecordRequest, _impl_.victim_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\7\6\0\0\0\0\0"
    "lazIR_tag.AddRecordRequest"
    "shooter"
    "victim"
  }},
};

::uint8_t* AddRecordRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lazIR_tag.AddRecordRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string shooter = 1;
  if (!this->_internal_shooter().empty()) {
    const std::string& _s = this->_internal_shooter();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lazIR_tag.AddRecordRequest.shooter");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string victim = 2;
  if (!this->_internal_victim().empty()) {
    const std::string& _s = this->_internal_victim();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lazIR_tag.AddRecordRequest.victim");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lazIR_tag.AddRecordRequest)
  return target;
}

::size_t AddRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lazIR_tag.AddRecordRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string shooter = 1;
  if (!this->_internal_shooter().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_shooter());
  }

  // string victim = 2;
  if (!this->_internal_victim().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_victim());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AddRecordRequest::_class_data_ = {
    AddRecordRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AddRecordRequest::GetClassData() const {
  return &_class_data_;
}

void AddRecordRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AddRecordRequest*>(&to_msg);
  auto& from = static_cast<const AddRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lazIR_tag.AddRecordRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_shooter().empty()) {
    _this->_internal_set_shooter(from._internal_shooter());
  }
  if (!from._internal_victim().empty()) {
    _this->_internal_set_victim(from._internal_victim());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddRecordRequest::CopyFrom(const AddRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lazIR_tag.AddRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AddRecordRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AddRecordRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AddRecordRequest::InternalSwap(AddRecordRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shooter_, &other->_impl_.shooter_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.victim_, &other->_impl_.victim_, arena);
}

::google::protobuf::Metadata AddRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[0]);
}
// ===================================================================

class AddRecordResponse::_Internal {
 public:
};

AddRecordResponse::AddRecordResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lazIR_tag.AddRecordResponse)
}
AddRecordResponse::AddRecordResponse(
    ::google::protobuf::Arena* arena, const AddRecordResponse& from)
    : AddRecordResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AddRecordResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AddRecordResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.commit_index_ = {};
}
AddRecordResponse::~AddRecordResponse() {
  // @@protoc_insertion_point(destructor:lazIR_tag.AddRecordResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddRecordResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AddRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lazIR_tag.AddRecordResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commit_index_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AddRecordResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AddRecordResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddRecordResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 commit_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AddRecordResponse, _impl_.commit_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AddRecordResponse, _impl_.commit_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 commit_index = 1;
    {PROTOBUF_FIELD_OFFSET(AddRecordResponse, _impl_.commit_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AddRecordResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lazIR_tag.AddRecordResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 commit_index = 1;
  if (this->_internal_commit_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_commit_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lazIR_tag.AddRecordResponse)
  return target;
}

::size_t AddRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lazIR_tag.AddRecordResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 commit_index = 1;
  if (this->_internal_commit_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_commit_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AddRecordResponse::_class_data_ = {
    AddRecordResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AddRecordResponse::GetClassData() const {
  return &_class_data_;
}

void AddRecordResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AddRecordResponse*>(&to_msg);
  auto& from = static_cast<const AddRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lazIR_tag.AddRecordResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_commit_index() != 0) {
    _this->_internal_set_commit_index(from._internal_commit_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddRecordResponse::CopyFrom(const AddRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lazIR_tag.AddRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AddRecordResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AddRecordResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AddRecordResponse::InternalSwap(AddRecordResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.commit_index_, other->_impl_.commit_index_);
}

::google::protobuf::Metadata AddRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[1]);
}
// ===================================================================

class GetRecordRequest::_Internal {
 public:
};

GetRecordRequest::GetRecordRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:lazIR_tag.GetRecordRequest)
}
GetRecordRequest::GetRecordRequest(
    ::google::protobuf::Arena* arena,
    const GetRecordRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetRecordRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:lazIR_tag.GetRecordRequest)
}









::google::protobuf::Metadata GetRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[2]);
}
// ===================================================================

GetRecordResponse_ScoreEntry_DoNotUse::GetRecordResponse_ScoreEntry_DoNotUse() {}
GetRecordResponse_ScoreEntry_DoNotUse::GetRecordResponse_ScoreEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GetRecordResponse_ScoreEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[3]);
}
// ===================================================================

class GetRecordResponse::_Internal {
 public:
};

GetRecordResponse::GetRecordResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lazIR_tag.GetRecordResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetRecordResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : score_{visibility, arena, from.score_},
        _cached_size_{0} {}

GetRecordResponse::GetRecordResponse(
    ::google::protobuf::Arena* arena,
    const GetRecordResponse& from)
    : ::google::protobuf::Message(arena) {
  GetRecordResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.read_at_index_ = from._impl_.read_at_index_;

  // @@protoc_insertion_point(copy_constructor:lazIR_tag.GetRecordResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetRecordResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : score_{visibility, arena},
        _cached_size_{0} {}

inline void GetRecordResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.read_at_index_ = {};
}
GetRecordResponse::~GetRecordResponse() {
  // @@protoc_insertion_point(destructor:lazIR_tag.GetRecordResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetRecordResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lazIR_tag.GetRecordResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.score_.Clear();
  _impl_.read_at_index_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetRecordResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 41, 2> GetRecordResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetRecordResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 read_at_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetRecordResponse, _impl_.read_at_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetRecordResponse, _impl_.read_at_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 read_at_index = 1;
    {PROTOBUF_FIELD_OFFSET(GetRecordResponse, _impl_.read_at_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // map<string, int32> score = 2;
    {PROTOBUF_FIELD_OFFSET(GetRecordResponse, _impl_.score_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetRecordResponse()._impl_.score_)>(
        1, 0, 0, 9,
        5)},
  }}, {{
    "\33\0\5\0\0\0\0\0"
    "lazIR_tag.GetRecordResponse"
    "score"
  }},
};

::uint8_t* GetRecordResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lazIR_tag.GetRecordResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 read_at_index = 1;
  if (this->_internal_read_at_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_read_at_index(), target);
  }

  // map<string, int32> score = 2;
  if (!_internal_score().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = _internal_score();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lazIR_tag.GetRecordResponse.score");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lazIR_tag.GetRecordResponse.score");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lazIR_tag.GetRecordResponse)
  return target;
}

::size_t GetRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lazIR_tag.GetRecordResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int32> score = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_score_size());
  for (const auto& entry : _internal_score()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
  }
  // uint64 read_at_index = 1;
  if (this->_internal_read_at_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_read_at_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetRecordResponse::_class_data_ = {
    GetRecordResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetRecordResponse::GetClassData() const {
  return &_class_data_;
}

void GetRecordResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetRecordResponse*>(&to_msg);
  auto& from = static_cast<const GetRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lazIR_tag.GetRecordResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.score_.MergeFrom(from._impl_.score_);
  if (from._internal_read_at_index() != 0) {
    _this->_internal_set_read_at_index(from._internal_read_at_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRecordResponse::CopyFrom(const GetRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lazIR_tag.GetRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetRecordResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetRecordResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetRecordResponse::InternalSwap(GetRecordResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.score_.InternalSwap(&other->_impl_.score_);
        swap(_impl_.read_at_index_, other->_impl_.read_at_index_);
}

::google::protobuf::Metadata GetRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2eproto_getter, &descriptor_table_service_2eproto_once,
      file_level_metadata_service_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace lazIR_tag
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
