// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport.proto

#include "transport.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr RPCHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_version_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RPCHeader::RPCHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RPCHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RPCHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RPCHeaderDefaultTypeInternal() {}
  union {
    RPCHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RPCHeaderDefaultTypeInternal _RPCHeader_default_instance_;

inline constexpr TimeoutNowResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TimeoutNowResponse::TimeoutNowResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TimeoutNowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeoutNowResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeoutNowResponseDefaultTypeInternal() {}
  union {
    TimeoutNowResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeoutNowResponseDefaultTypeInternal _TimeoutNowResponse_default_instance_;

inline constexpr TimeoutNowRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TimeoutNowRequest::TimeoutNowRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TimeoutNowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeoutNowRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeoutNowRequestDefaultTypeInternal() {}
  union {
    TimeoutNowRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeoutNowRequestDefaultTypeInternal _TimeoutNowRequest_default_instance_;

inline constexpr RequestVoteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peers_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rpc_header_{nullptr},
        term_{::uint64_t{0u}},
        granted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteResponse::RequestVoteResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteResponseDefaultTypeInternal() {}
  union {
    RequestVoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteResponseDefaultTypeInternal _RequestVoteResponse_default_instance_;

inline constexpr RequestVoteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        candidate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rpc_header_{nullptr},
        term_{::uint64_t{0u}},
        last_log_index_{::uint64_t{0u}},
        last_log_term_{::uint64_t{0u}},
        leadership_transfer_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteRequest::RequestVoteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteRequestDefaultTypeInternal() {}
  union {
    RequestVoteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteRequestDefaultTypeInternal _RequestVoteRequest_default_instance_;

inline constexpr Log::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extensions_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        appended_at_{nullptr},
        index_{::uint64_t{0u}},
        term_{::uint64_t{0u}},
        type_{static_cast< ::Log_LogType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Log::Log(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogDefaultTypeInternal() {}
  union {
    Log _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogDefaultTypeInternal _Log_default_instance_;

inline constexpr InstallSnapshotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_header_{nullptr},
        term_{::uint64_t{0u}},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR InstallSnapshotResponse::InstallSnapshotResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InstallSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallSnapshotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallSnapshotResponseDefaultTypeInternal() {}
  union {
    InstallSnapshotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallSnapshotResponseDefaultTypeInternal _InstallSnapshotResponse_default_instance_;

inline constexpr InstallSnapshotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        leader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        peers_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        configuration_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rpc_header_{nullptr},
        term_{::uint64_t{0u}},
        last_log_index_{::uint64_t{0u}},
        last_log_term_{::uint64_t{0u}},
        configuration_index_{::uint64_t{0u}},
        size_{::int64_t{0}},
        snapshot_version_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR InstallSnapshotRequest::InstallSnapshotRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InstallSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallSnapshotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallSnapshotRequestDefaultTypeInternal() {}
  union {
    InstallSnapshotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallSnapshotRequestDefaultTypeInternal _InstallSnapshotRequest_default_instance_;

inline constexpr AppendEntriesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpc_header_{nullptr},
        term_{::uint64_t{0u}},
        last_log_{::uint64_t{0u}},
        success_{false},
        no_retry_backoff_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AppendEntriesResponse::AppendEntriesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendEntriesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendEntriesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendEntriesResponseDefaultTypeInternal() {}
  union {
    AppendEntriesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendEntriesResponseDefaultTypeInternal _AppendEntriesResponse_default_instance_;

inline constexpr AppendEntriesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entries_{},
        leader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rpc_header_{nullptr},
        term_{::uint64_t{0u}},
        prev_log_entry_{::uint64_t{0u}},
        prev_log_term_{::uint64_t{0u}},
        leader_commit_index_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR AppendEntriesRequest::AppendEntriesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendEntriesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendEntriesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendEntriesRequestDefaultTypeInternal() {}
  union {
    AppendEntriesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendEntriesRequestDefaultTypeInternal _AppendEntriesRequest_default_instance_;
static ::_pb::Metadata file_level_metadata_transport_2eproto[10];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_transport_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_transport_2eproto = nullptr;
const ::uint32_t TableStruct_transport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::RPCHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RPCHeader, _impl_.protocol_version_),
    PROTOBUF_FIELD_OFFSET(::RPCHeader, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::RPCHeader, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::Log, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Log, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Log, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::Log, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::Log, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::Log, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::Log, _impl_.extensions_),
    PROTOBUF_FIELD_OFFSET(::Log, _impl_.appended_at_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.rpc_header_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.leader_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.prev_log_entry_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.prev_log_term_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.entries_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesRequest, _impl_.leader_commit_index_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _impl_.rpc_header_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _impl_.last_log_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::AppendEntriesResponse, _impl_.no_retry_backoff_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_.rpc_header_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_.candidate_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_.last_log_index_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_.last_log_term_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteRequest, _impl_.leadership_transfer_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::RequestVoteResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RequestVoteResponse, _impl_.rpc_header_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteResponse, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteResponse, _impl_.peers_),
    PROTOBUF_FIELD_OFFSET(::RequestVoteResponse, _impl_.granted_),
    0,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::TimeoutNowRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TimeoutNowRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TimeoutNowRequest, _impl_.rpc_header_),
    0,
    PROTOBUF_FIELD_OFFSET(::TimeoutNowResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TimeoutNowResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TimeoutNowResponse, _impl_.rpc_header_),
    0,
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.rpc_header_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.snapshot_version_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.leader_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.last_log_index_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.last_log_term_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.peers_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.configuration_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.configuration_index_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotRequest, _impl_.data_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotResponse, _impl_.rpc_header_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotResponse, _impl_.term_),
    PROTOBUF_FIELD_OFFSET(::InstallSnapshotResponse, _impl_.success_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::RPCHeader)},
        {11, 25, -1, sizeof(::Log)},
        {31, 46, -1, sizeof(::AppendEntriesRequest)},
        {53, 66, -1, sizeof(::AppendEntriesResponse)},
        {71, 85, -1, sizeof(::RequestVoteRequest)},
        {91, 103, -1, sizeof(::RequestVoteResponse)},
        {107, 116, -1, sizeof(::TimeoutNowRequest)},
        {117, 126, -1, sizeof(::TimeoutNowResponse)},
        {127, 146, -1, sizeof(::InstallSnapshotRequest)},
        {157, 168, -1, sizeof(::InstallSnapshotResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_RPCHeader_default_instance_._instance,
    &::_Log_default_instance_._instance,
    &::_AppendEntriesRequest_default_instance_._instance,
    &::_AppendEntriesResponse_default_instance_._instance,
    &::_RequestVoteRequest_default_instance_._instance,
    &::_RequestVoteResponse_default_instance_._instance,
    &::_TimeoutNowRequest_default_instance_._instance,
    &::_TimeoutNowResponse_default_instance_._instance,
    &::_InstallSnapshotRequest_default_instance_._instance,
    &::_InstallSnapshotResponse_default_instance_._instance,
};
const char descriptor_table_protodef_transport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017transport.proto\032\037google/protobuf/times"
    "tamp.proto\"\?\n\tRPCHeader\022\030\n\020protocol_vers"
    "ion\030\001 \001(\003\022\n\n\002id\030\002 \001(\014\022\014\n\004addr\030\003 \001(\014\"\241\002\n\003"
    "Log\022\r\n\005index\030\001 \001(\004\022\014\n\004term\030\002 \001(\004\022\032\n\004type"
    "\030\003 \001(\0162\014.Log.LogType\022\014\n\004data\030\004 \001(\014\022\022\n\nex"
    "tensions\030\005 \001(\014\022/\n\013appended_at\030\006 \001(\0132\032.go"
    "ogle.protobuf.Timestamp\"\215\001\n\007LogType\022\017\n\013L"
    "OG_COMMAND\020\000\022\014\n\010LOG_NOOP\020\001\022\033\n\027LOG_ADD_PE"
    "ER_DEPRECATED\020\002\022\036\n\032LOG_REMOVE_PEER_DEPRE"
    "CATED\020\003\022\017\n\013LOG_BARRIER\020\004\022\025\n\021LOG_CONFIGUR"
    "ATION\020\005\"\267\001\n\024AppendEntriesRequest\022\036\n\nrpc_"
    "header\030\001 \001(\0132\n.RPCHeader\022\014\n\004term\030\002 \001(\004\022\016"
    "\n\006leader\030\003 \001(\014\022\026\n\016prev_log_entry\030\004 \001(\004\022\025"
    "\n\rprev_log_term\030\005 \001(\004\022\025\n\007entries\030\006 \003(\0132\004"
    ".Log\022\033\n\023leader_commit_index\030\007 \001(\004\"\202\001\n\025Ap"
    "pendEntriesResponse\022\036\n\nrpc_header\030\001 \001(\0132"
    "\n.RPCHeader\022\014\n\004term\030\002 \001(\004\022\020\n\010last_log\030\003 "
    "\001(\004\022\017\n\007success\030\004 \001(\010\022\030\n\020no_retry_backoff"
    "\030\005 \001(\010\"\241\001\n\022RequestVoteRequest\022\036\n\nrpc_hea"
    "der\030\001 \001(\0132\n.RPCHeader\022\014\n\004term\030\002 \001(\004\022\021\n\tc"
    "andidate\030\003 \001(\014\022\026\n\016last_log_index\030\004 \001(\004\022\025"
    "\n\rlast_log_term\030\005 \001(\004\022\033\n\023leadership_tran"
    "sfer\030\006 \001(\010\"c\n\023RequestVoteResponse\022\036\n\nrpc"
    "_header\030\001 \001(\0132\n.RPCHeader\022\014\n\004term\030\002 \001(\004\022"
    "\r\n\005peers\030\003 \001(\014\022\017\n\007granted\030\004 \001(\010\"3\n\021Timeo"
    "utNowRequest\022\036\n\nrpc_header\030\001 \001(\0132\n.RPCHe"
    "ader\"4\n\022TimeoutNowResponse\022\036\n\nrpc_header"
    "\030\001 \001(\0132\n.RPCHeader\"\376\001\n\026InstallSnapshotRe"
    "quest\022\036\n\nrpc_header\030\001 \001(\0132\n.RPCHeader\022\030\n"
    "\020snapshot_version\030\013 \001(\003\022\014\n\004term\030\002 \001(\004\022\016\n"
    "\006leader\030\003 \001(\014\022\026\n\016last_log_index\030\004 \001(\004\022\025\n"
    "\rlast_log_term\030\005 \001(\004\022\r\n\005peers\030\006 \001(\014\022\025\n\rc"
    "onfiguration\030\007 \001(\014\022\033\n\023configuration_inde"
    "x\030\010 \001(\004\022\014\n\004size\030\t \001(\003\022\014\n\004data\030\n \001(\014\"X\n\027I"
    "nstallSnapshotResponse\022\036\n\nrpc_header\030\001 \001"
    "(\0132\n.RPCHeader\022\014\n\004term\030\002 \001(\004\022\017\n\007success\030"
    "\003 \001(\0102\336\002\n\rRaftTransport\022L\n\025AppendEntries"
    "Pipeline\022\025.AppendEntriesRequest\032\026.Append"
    "EntriesResponse\"\000(\0010\001\022@\n\rAppendEntries\022\025"
    ".AppendEntriesRequest\032\026.AppendEntriesRes"
    "ponse\"\000\022:\n\013RequestVote\022\023.RequestVoteRequ"
    "est\032\024.RequestVoteResponse\"\000\0227\n\nTimeoutNo"
    "w\022\022.TimeoutNowRequest\032\023.TimeoutNowRespon"
    "se\"\000\022H\n\017InstallSnapshot\022\027.InstallSnapsho"
    "tRequest\032\030.InstallSnapshotResponse\"\000(\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_transport_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_transport_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transport_2eproto = {
    false,
    false,
    1806,
    descriptor_table_protodef_transport_2eproto,
    "transport.proto",
    &descriptor_table_transport_2eproto_once,
    descriptor_table_transport_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct_transport_2eproto::offsets,
    file_level_metadata_transport_2eproto,
    file_level_enum_descriptors_transport_2eproto,
    file_level_service_descriptors_transport_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transport_2eproto_getter() {
  return &descriptor_table_transport_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transport_2eproto(&descriptor_table_transport_2eproto);
const ::google::protobuf::EnumDescriptor* Log_LogType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_transport_2eproto);
  return file_level_enum_descriptors_transport_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Log_LogType_internal_data_[] = {
    393216u, 0u, };
bool Log_LogType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Log_LogType Log::LOG_COMMAND;
constexpr Log_LogType Log::LOG_NOOP;
constexpr Log_LogType Log::LOG_ADD_PEER_DEPRECATED;
constexpr Log_LogType Log::LOG_REMOVE_PEER_DEPRECATED;
constexpr Log_LogType Log::LOG_BARRIER;
constexpr Log_LogType Log::LOG_CONFIGURATION;
constexpr Log_LogType Log::LogType_MIN;
constexpr Log_LogType Log::LogType_MAX;
constexpr int Log::LogType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class RPCHeader::_Internal {
 public:
};

RPCHeader::RPCHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RPCHeader)
}
inline PROTOBUF_NDEBUG_INLINE RPCHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_(arena, from.id_),
        addr_(arena, from.addr_),
        _cached_size_{0} {}

RPCHeader::RPCHeader(
    ::google::protobuf::Arena* arena,
    const RPCHeader& from)
    : ::google::protobuf::Message(arena) {
  RPCHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.protocol_version_ = from._impl_.protocol_version_;

  // @@protoc_insertion_point(copy_constructor:RPCHeader)
}
inline PROTOBUF_NDEBUG_INLINE RPCHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        addr_(arena),
        _cached_size_{0} {}

inline void RPCHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.protocol_version_ = {};
}
RPCHeader::~RPCHeader() {
  // @@protoc_insertion_point(destructor:RPCHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RPCHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.addr_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RPCHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:RPCHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.addr_.ClearToEmpty();
  _impl_.protocol_version_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RPCHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RPCHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RPCHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 protocol_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RPCHeader, _impl_.protocol_version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.protocol_version_)}},
    // bytes id = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.id_)}},
    // bytes addr = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 protocol_version = 1;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.protocol_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes id = 2;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes addr = 3;
    {PROTOBUF_FIELD_OFFSET(RPCHeader, _impl_.addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RPCHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RPCHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 protocol_version = 1;
  if (this->_internal_protocol_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_protocol_version(), target);
  }

  // bytes id = 2;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes addr = 3;
  if (!this->_internal_addr().empty()) {
    const std::string& _s = this->_internal_addr();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPCHeader)
  return target;
}

::size_t RPCHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPCHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_id());
  }

  // bytes addr = 3;
  if (!this->_internal_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_addr());
  }

  // int64 protocol_version = 1;
  if (this->_internal_protocol_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_protocol_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RPCHeader::_class_data_ = {
    RPCHeader::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RPCHeader::GetClassData() const {
  return &_class_data_;
}

void RPCHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RPCHeader*>(&to_msg);
  auto& from = static_cast<const RPCHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RPCHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_protocol_version() != 0) {
    _this->_internal_set_protocol_version(from._internal_protocol_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RPCHeader::CopyFrom(const RPCHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPCHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RPCHeader::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RPCHeader::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RPCHeader::InternalSwap(RPCHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.addr_, &other->_impl_.addr_, arena);
        swap(_impl_.protocol_version_, other->_impl_.protocol_version_);
}

::google::protobuf::Metadata RPCHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[0]);
}
// ===================================================================

class Log::_Internal {
 public:
  using HasBits = decltype(std::declval<Log>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Log, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& appended_at(const Log* msg);
  static void set_has_appended_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Log::_Internal::appended_at(const Log* msg) {
  return *msg->_impl_.appended_at_;
}
void Log::clear_appended_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.appended_at_ != nullptr) _impl_.appended_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Log::Log(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Log)
}
inline PROTOBUF_NDEBUG_INLINE Log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_),
        extensions_(arena, from.extensions_) {}

Log::Log(
    ::google::protobuf::Arena* arena,
    const Log& from)
    : ::google::protobuf::Message(arena) {
  Log* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.appended_at_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.appended_at_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:Log)
}
inline PROTOBUF_NDEBUG_INLINE Log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena),
        extensions_(arena) {}

inline void Log::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, appended_at_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, appended_at_) +
               sizeof(Impl_::type_));
}
Log::~Log() {
  // @@protoc_insertion_point(destructor:Log)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Log::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.extensions_.Destroy();
  delete _impl_.appended_at_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Log::Clear() {
// @@protoc_insertion_point(message_clear_start:Log)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.extensions_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.appended_at_ != nullptr);
    _impl_.appended_at_->Clear();
  }
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Log::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> Log::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Log, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Log_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Log, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.index_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Log, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.term_)}},
    // .Log.LogType type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Log, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.type_)}},
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.data_)}},
    // bytes extensions = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.extensions_)}},
    // .google.protobuf.Timestamp appended_at = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.appended_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 index = 1;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Log.LogType type = 3;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes extensions = 5;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.extensions_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp appended_at = 6;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.appended_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* Log::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Log)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_index(), target);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // .Log.LogType type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // bytes extensions = 5;
  if (!this->_internal_extensions().empty()) {
    const std::string& _s = this->_internal_extensions();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp appended_at = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::appended_at(this),
        _Internal::appended_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Log)
  return target;
}

::size_t Log::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Log)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // bytes extensions = 5;
  if (!this->_internal_extensions().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_extensions());
  }

  // .google.protobuf.Timestamp appended_at = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.appended_at_);
  }

  // uint64 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_index());
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // .Log.LogType type = 3;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Log::_class_data_ = {
    Log::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Log::GetClassData() const {
  return &_class_data_;
}

void Log::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Log*>(&to_msg);
  auto& from = static_cast<const Log&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Log)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_extensions().empty()) {
    _this->_internal_set_extensions(from._internal_extensions());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_appended_at()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_appended_at());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Log::CopyFrom(const Log& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Log::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Log::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Log::InternalSwap(Log* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extensions_, &other->_impl_.extensions_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Log, _impl_.type_)
      + sizeof(Log::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Log, _impl_.appended_at_)>(
          reinterpret_cast<char*>(&_impl_.appended_at_),
          reinterpret_cast<char*>(&other->_impl_.appended_at_));
}

::google::protobuf::Metadata Log::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[1]);
}
// ===================================================================

class AppendEntriesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AppendEntriesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const AppendEntriesRequest* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& AppendEntriesRequest::_Internal::rpc_header(const AppendEntriesRequest* msg) {
  return *msg->_impl_.rpc_header_;
}
AppendEntriesRequest::AppendEntriesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AppendEntriesRequest)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entries_{visibility, arena, from.entries_},
        leader_(arena, from.leader_) {}

AppendEntriesRequest::AppendEntriesRequest(
    ::google::protobuf::Arena* arena,
    const AppendEntriesRequest& from)
    : ::google::protobuf::Message(arena) {
  AppendEntriesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, leader_commit_index_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::leader_commit_index_));

  // @@protoc_insertion_point(copy_constructor:AppendEntriesRequest)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entries_{visibility, arena},
        leader_(arena) {}

inline void AppendEntriesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_header_),
           0,
           offsetof(Impl_, leader_commit_index_) -
               offsetof(Impl_, rpc_header_) +
               sizeof(Impl_::leader_commit_index_));
}
AppendEntriesRequest::~AppendEntriesRequest() {
  // @@protoc_insertion_point(destructor:AppendEntriesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendEntriesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.leader_.Destroy();
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppendEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AppendEntriesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.leader_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.leader_commit_index_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.leader_commit_index_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendEntriesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2> AppendEntriesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppendEntriesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.rpc_header_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AppendEntriesRequest, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.term_)}},
    // bytes leader = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leader_)}},
    // uint64 prev_log_entry = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AppendEntriesRequest, _impl_.prev_log_entry_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prev_log_entry_)}},
    // uint64 prev_log_term = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AppendEntriesRequest, _impl_.prev_log_term_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prev_log_term_)}},
    // repeated .Log entries = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.entries_)}},
    // uint64 leader_commit_index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AppendEntriesRequest, _impl_.leader_commit_index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leader_commit_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes leader = 3;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leader_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 prev_log_entry = 4;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prev_log_entry_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 prev_log_term = 5;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.prev_log_term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .Log entries = 6;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.entries_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 leader_commit_index = 7;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leader_commit_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
    {::_pbi::TcParser::GetTable<::Log>()},
  }}, {{
  }},
};

::uint8_t* AppendEntriesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppendEntriesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // bytes leader = 3;
  if (!this->_internal_leader().empty()) {
    const std::string& _s = this->_internal_leader();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // uint64 prev_log_entry = 4;
  if (this->_internal_prev_log_entry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_prev_log_entry(), target);
  }

  // uint64 prev_log_term = 5;
  if (this->_internal_prev_log_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_prev_log_term(), target);
  }

  // repeated .Log entries = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint64 leader_commit_index = 7;
  if (this->_internal_leader_commit_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_leader_commit_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppendEntriesRequest)
  return target;
}

::size_t AppendEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppendEntriesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Log entries = 6;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes leader = 3;
  if (!this->_internal_leader().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_leader());
  }

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // uint64 prev_log_entry = 4;
  if (this->_internal_prev_log_entry() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_prev_log_entry());
  }

  // uint64 prev_log_term = 5;
  if (this->_internal_prev_log_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_prev_log_term());
  }

  // uint64 leader_commit_index = 7;
  if (this->_internal_leader_commit_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_leader_commit_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppendEntriesRequest::_class_data_ = {
    AppendEntriesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppendEntriesRequest::GetClassData() const {
  return &_class_data_;
}

void AppendEntriesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppendEntriesRequest*>(&to_msg);
  auto& from = static_cast<const AppendEntriesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AppendEntriesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (!from._internal_leader().empty()) {
    _this->_internal_set_leader(from._internal_leader());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_prev_log_entry() != 0) {
    _this->_internal_set_prev_log_entry(from._internal_prev_log_entry());
  }
  if (from._internal_prev_log_term() != 0) {
    _this->_internal_set_prev_log_term(from._internal_prev_log_term());
  }
  if (from._internal_leader_commit_index() != 0) {
    _this->_internal_set_leader_commit_index(from._internal_leader_commit_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendEntriesRequest::CopyFrom(const AppendEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppendEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendEntriesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppendEntriesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppendEntriesRequest::InternalSwap(AppendEntriesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leader_, &other->_impl_.leader_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.leader_commit_index_)
      + sizeof(AppendEntriesRequest::_impl_.leader_commit_index_)
      - PROTOBUF_FIELD_OFFSET(AppendEntriesRequest, _impl_.rpc_header_)>(
          reinterpret_cast<char*>(&_impl_.rpc_header_),
          reinterpret_cast<char*>(&other->_impl_.rpc_header_));
}

::google::protobuf::Metadata AppendEntriesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[2]);
}
// ===================================================================

class AppendEntriesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AppendEntriesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const AppendEntriesResponse* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& AppendEntriesResponse::_Internal::rpc_header(const AppendEntriesResponse* msg) {
  return *msg->_impl_.rpc_header_;
}
AppendEntriesResponse::AppendEntriesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AppendEntriesResponse)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AppendEntriesResponse::AppendEntriesResponse(
    ::google::protobuf::Arena* arena,
    const AppendEntriesResponse& from)
    : ::google::protobuf::Message(arena) {
  AppendEntriesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, no_retry_backoff_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::no_retry_backoff_));

  // @@protoc_insertion_point(copy_constructor:AppendEntriesResponse)
}
inline PROTOBUF_NDEBUG_INLINE AppendEntriesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppendEntriesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_header_),
           0,
           offsetof(Impl_, no_retry_backoff_) -
               offsetof(Impl_, rpc_header_) +
               sizeof(Impl_::no_retry_backoff_));
}
AppendEntriesResponse::~AppendEntriesResponse() {
  // @@protoc_insertion_point(destructor:AppendEntriesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendEntriesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppendEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AppendEntriesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.no_retry_backoff_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.no_retry_backoff_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendEntriesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> AppendEntriesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppendEntriesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.rpc_header_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AppendEntriesResponse, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.term_)}},
    // uint64 last_log = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AppendEntriesResponse, _impl_.last_log_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.last_log_)}},
    // bool success = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppendEntriesResponse, _impl_.success_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.success_)}},
    // bool no_retry_backoff = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppendEntriesResponse, _impl_.no_retry_backoff_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.no_retry_backoff_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 last_log = 3;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.last_log_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool success = 4;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool no_retry_backoff = 5;
    {PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.no_retry_backoff_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* AppendEntriesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AppendEntriesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // uint64 last_log = 3;
  if (this->_internal_last_log() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_last_log(), target);
  }

  // bool success = 4;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_success(), target);
  }

  // bool no_retry_backoff = 5;
  if (this->_internal_no_retry_backoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_no_retry_backoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppendEntriesResponse)
  return target;
}

::size_t AppendEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppendEntriesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // uint64 last_log = 3;
  if (this->_internal_last_log() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_last_log());
  }

  // bool success = 4;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  // bool no_retry_backoff = 5;
  if (this->_internal_no_retry_backoff() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppendEntriesResponse::_class_data_ = {
    AppendEntriesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppendEntriesResponse::GetClassData() const {
  return &_class_data_;
}

void AppendEntriesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppendEntriesResponse*>(&to_msg);
  auto& from = static_cast<const AppendEntriesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AppendEntriesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_last_log() != 0) {
    _this->_internal_set_last_log(from._internal_last_log());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_no_retry_backoff() != 0) {
    _this->_internal_set_no_retry_backoff(from._internal_no_retry_backoff());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendEntriesResponse::CopyFrom(const AppendEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppendEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendEntriesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppendEntriesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppendEntriesResponse::InternalSwap(AppendEntriesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.no_retry_backoff_)
      + sizeof(AppendEntriesResponse::_impl_.no_retry_backoff_)
      - PROTOBUF_FIELD_OFFSET(AppendEntriesResponse, _impl_.rpc_header_)>(
          reinterpret_cast<char*>(&_impl_.rpc_header_),
          reinterpret_cast<char*>(&other->_impl_.rpc_header_));
}

::google::protobuf::Metadata AppendEntriesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[3]);
}
// ===================================================================

class RequestVoteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RequestVoteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const RequestVoteRequest* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& RequestVoteRequest::_Internal::rpc_header(const RequestVoteRequest* msg) {
  return *msg->_impl_.rpc_header_;
}
RequestVoteRequest::RequestVoteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RequestVoteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        candidate_(arena, from.candidate_) {}

RequestVoteRequest::RequestVoteRequest(
    ::google::protobuf::Arena* arena,
    const RequestVoteRequest& from)
    : ::google::protobuf::Message(arena) {
  RequestVoteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, leadership_transfer_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::leadership_transfer_));

  // @@protoc_insertion_point(copy_constructor:RequestVoteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        candidate_(arena) {}

inline void RequestVoteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_header_),
           0,
           offsetof(Impl_, leadership_transfer_) -
               offsetof(Impl_, rpc_header_) +
               sizeof(Impl_::leadership_transfer_));
}
RequestVoteRequest::~RequestVoteRequest() {
  // @@protoc_insertion_point(destructor:RequestVoteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.candidate_.Destroy();
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestVoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestVoteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candidate_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.leadership_transfer_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.leadership_transfer_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> RequestVoteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RequestVoteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.rpc_header_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestVoteRequest, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_)}},
    // bytes candidate = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.candidate_)}},
    // uint64 last_log_index = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestVoteRequest, _impl_.last_log_index_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.last_log_index_)}},
    // uint64 last_log_term = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestVoteRequest, _impl_.last_log_term_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.last_log_term_)}},
    // bool leadership_transfer = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestVoteRequest, _impl_.leadership_transfer_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.leadership_transfer_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes candidate = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.candidate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 last_log_index = 4;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.last_log_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 last_log_term = 5;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.last_log_term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool leadership_transfer = 6;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.leadership_transfer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* RequestVoteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RequestVoteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // bytes candidate = 3;
  if (!this->_internal_candidate().empty()) {
    const std::string& _s = this->_internal_candidate();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // uint64 last_log_index = 4;
  if (this->_internal_last_log_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_last_log_index(), target);
  }

  // uint64 last_log_term = 5;
  if (this->_internal_last_log_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_last_log_term(), target);
  }

  // bool leadership_transfer = 6;
  if (this->_internal_leadership_transfer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_leadership_transfer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestVoteRequest)
  return target;
}

::size_t RequestVoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestVoteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes candidate = 3;
  if (!this->_internal_candidate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_candidate());
  }

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // uint64 last_log_index = 4;
  if (this->_internal_last_log_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_last_log_index());
  }

  // uint64 last_log_term = 5;
  if (this->_internal_last_log_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_last_log_term());
  }

  // bool leadership_transfer = 6;
  if (this->_internal_leadership_transfer() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestVoteRequest::_class_data_ = {
    RequestVoteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestVoteRequest::GetClassData() const {
  return &_class_data_;
}

void RequestVoteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestVoteRequest*>(&to_msg);
  auto& from = static_cast<const RequestVoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RequestVoteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_candidate().empty()) {
    _this->_internal_set_candidate(from._internal_candidate());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_last_log_index() != 0) {
    _this->_internal_set_last_log_index(from._internal_last_log_index());
  }
  if (from._internal_last_log_term() != 0) {
    _this->_internal_set_last_log_term(from._internal_last_log_term());
  }
  if (from._internal_leadership_transfer() != 0) {
    _this->_internal_set_leadership_transfer(from._internal_leadership_transfer());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteRequest::CopyFrom(const RequestVoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestVoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestVoteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestVoteRequest::InternalSwap(RequestVoteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.candidate_, &other->_impl_.candidate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.leadership_transfer_)
      + sizeof(RequestVoteRequest::_impl_.leadership_transfer_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.rpc_header_)>(
          reinterpret_cast<char*>(&_impl_.rpc_header_),
          reinterpret_cast<char*>(&other->_impl_.rpc_header_));
}

::google::protobuf::Metadata RequestVoteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[4]);
}
// ===================================================================

class RequestVoteResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RequestVoteResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const RequestVoteResponse* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& RequestVoteResponse::_Internal::rpc_header(const RequestVoteResponse* msg) {
  return *msg->_impl_.rpc_header_;
}
RequestVoteResponse::RequestVoteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RequestVoteResponse)
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        peers_(arena, from.peers_) {}

RequestVoteResponse::RequestVoteResponse(
    ::google::protobuf::Arena* arena,
    const RequestVoteResponse& from)
    : ::google::protobuf::Message(arena) {
  RequestVoteResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, granted_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::granted_));

  // @@protoc_insertion_point(copy_constructor:RequestVoteResponse)
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        peers_(arena) {}

inline void RequestVoteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_header_),
           0,
           offsetof(Impl_, granted_) -
               offsetof(Impl_, rpc_header_) +
               sizeof(Impl_::granted_));
}
RequestVoteResponse::~RequestVoteResponse() {
  // @@protoc_insertion_point(destructor:RequestVoteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.peers_.Destroy();
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestVoteResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.peers_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.granted_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.granted_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> RequestVoteResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RequestVoteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool granted = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestVoteResponse, _impl_.granted_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.granted_)}},
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.rpc_header_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestVoteResponse, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.term_)}},
    // bytes peers = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes peers = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.peers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool granted = 4;
    {PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.granted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* RequestVoteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RequestVoteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // bytes peers = 3;
  if (!this->_internal_peers().empty()) {
    const std::string& _s = this->_internal_peers();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bool granted = 4;
  if (this->_internal_granted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_granted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestVoteResponse)
  return target;
}

::size_t RequestVoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestVoteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes peers = 3;
  if (!this->_internal_peers().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_peers());
  }

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // bool granted = 4;
  if (this->_internal_granted() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestVoteResponse::_class_data_ = {
    RequestVoteResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestVoteResponse::GetClassData() const {
  return &_class_data_;
}

void RequestVoteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestVoteResponse*>(&to_msg);
  auto& from = static_cast<const RequestVoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RequestVoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_peers().empty()) {
    _this->_internal_set_peers(from._internal_peers());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_granted() != 0) {
    _this->_internal_set_granted(from._internal_granted());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteResponse::CopyFrom(const RequestVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestVoteResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestVoteResponse::InternalSwap(RequestVoteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.peers_, &other->_impl_.peers_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.granted_)
      + sizeof(RequestVoteResponse::_impl_.granted_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteResponse, _impl_.rpc_header_)>(
          reinterpret_cast<char*>(&_impl_.rpc_header_),
          reinterpret_cast<char*>(&other->_impl_.rpc_header_));
}

::google::protobuf::Metadata RequestVoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[5]);
}
// ===================================================================

class TimeoutNowRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TimeoutNowRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TimeoutNowRequest, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const TimeoutNowRequest* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& TimeoutNowRequest::_Internal::rpc_header(const TimeoutNowRequest* msg) {
  return *msg->_impl_.rpc_header_;
}
TimeoutNowRequest::TimeoutNowRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TimeoutNowRequest)
}
inline PROTOBUF_NDEBUG_INLINE TimeoutNowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TimeoutNowRequest::TimeoutNowRequest(
    ::google::protobuf::Arena* arena,
    const TimeoutNowRequest& from)
    : ::google::protobuf::Message(arena) {
  TimeoutNowRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:TimeoutNowRequest)
}
inline PROTOBUF_NDEBUG_INLINE TimeoutNowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TimeoutNowRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rpc_header_ = {};
}
TimeoutNowRequest::~TimeoutNowRequest() {
  // @@protoc_insertion_point(destructor:TimeoutNowRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeoutNowRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TimeoutNowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TimeoutNowRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TimeoutNowRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TimeoutNowRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimeoutNowRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TimeoutNowRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TimeoutNowRequest, _impl_.rpc_header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(TimeoutNowRequest, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* TimeoutNowRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TimeoutNowRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimeoutNowRequest)
  return target;
}

::size_t TimeoutNowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TimeoutNowRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TimeoutNowRequest::_class_data_ = {
    TimeoutNowRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TimeoutNowRequest::GetClassData() const {
  return &_class_data_;
}

void TimeoutNowRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TimeoutNowRequest*>(&to_msg);
  auto& from = static_cast<const TimeoutNowRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TimeoutNowRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeoutNowRequest::CopyFrom(const TimeoutNowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TimeoutNowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TimeoutNowRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TimeoutNowRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TimeoutNowRequest::InternalSwap(TimeoutNowRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rpc_header_, other->_impl_.rpc_header_);
}

::google::protobuf::Metadata TimeoutNowRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[6]);
}
// ===================================================================

class TimeoutNowResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TimeoutNowResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TimeoutNowResponse, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const TimeoutNowResponse* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& TimeoutNowResponse::_Internal::rpc_header(const TimeoutNowResponse* msg) {
  return *msg->_impl_.rpc_header_;
}
TimeoutNowResponse::TimeoutNowResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TimeoutNowResponse)
}
inline PROTOBUF_NDEBUG_INLINE TimeoutNowResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TimeoutNowResponse::TimeoutNowResponse(
    ::google::protobuf::Arena* arena,
    const TimeoutNowResponse& from)
    : ::google::protobuf::Message(arena) {
  TimeoutNowResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:TimeoutNowResponse)
}
inline PROTOBUF_NDEBUG_INLINE TimeoutNowResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TimeoutNowResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rpc_header_ = {};
}
TimeoutNowResponse::~TimeoutNowResponse() {
  // @@protoc_insertion_point(destructor:TimeoutNowResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeoutNowResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TimeoutNowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TimeoutNowResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TimeoutNowResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TimeoutNowResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimeoutNowResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TimeoutNowResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TimeoutNowResponse, _impl_.rpc_header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(TimeoutNowResponse, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* TimeoutNowResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TimeoutNowResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimeoutNowResponse)
  return target;
}

::size_t TimeoutNowResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TimeoutNowResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TimeoutNowResponse::_class_data_ = {
    TimeoutNowResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TimeoutNowResponse::GetClassData() const {
  return &_class_data_;
}

void TimeoutNowResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TimeoutNowResponse*>(&to_msg);
  auto& from = static_cast<const TimeoutNowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TimeoutNowResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeoutNowResponse::CopyFrom(const TimeoutNowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TimeoutNowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TimeoutNowResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TimeoutNowResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TimeoutNowResponse::InternalSwap(TimeoutNowResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rpc_header_, other->_impl_.rpc_header_);
}

::google::protobuf::Metadata TimeoutNowResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[7]);
}
// ===================================================================

class InstallSnapshotRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<InstallSnapshotRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const InstallSnapshotRequest* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& InstallSnapshotRequest::_Internal::rpc_header(const InstallSnapshotRequest* msg) {
  return *msg->_impl_.rpc_header_;
}
InstallSnapshotRequest::InstallSnapshotRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InstallSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        leader_(arena, from.leader_),
        peers_(arena, from.peers_),
        configuration_(arena, from.configuration_),
        data_(arena, from.data_) {}

InstallSnapshotRequest::InstallSnapshotRequest(
    ::google::protobuf::Arena* arena,
    const InstallSnapshotRequest& from)
    : ::google::protobuf::Message(arena) {
  InstallSnapshotRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, snapshot_version_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::snapshot_version_));

  // @@protoc_insertion_point(copy_constructor:InstallSnapshotRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        leader_(arena),
        peers_(arena),
        configuration_(arena),
        data_(arena) {}

inline void InstallSnapshotRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_header_),
           0,
           offsetof(Impl_, snapshot_version_) -
               offsetof(Impl_, rpc_header_) +
               sizeof(Impl_::snapshot_version_));
}
InstallSnapshotRequest::~InstallSnapshotRequest() {
  // @@protoc_insertion_point(destructor:InstallSnapshotRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstallSnapshotRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.leader_.Destroy();
  _impl_.peers_.Destroy();
  _impl_.configuration_.Destroy();
  _impl_.data_.Destroy();
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InstallSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:InstallSnapshotRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.leader_.ClearToEmpty();
  _impl_.peers_.ClearToEmpty();
  _impl_.configuration_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.snapshot_version_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.snapshot_version_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstallSnapshotRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 0, 2> InstallSnapshotRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InstallSnapshotRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.rpc_header_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotRequest, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.term_)}},
    // bytes leader = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leader_)}},
    // uint64 last_log_index = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotRequest, _impl_.last_log_index_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.last_log_index_)}},
    // uint64 last_log_term = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotRequest, _impl_.last_log_term_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.last_log_term_)}},
    // bytes peers = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.peers_)}},
    // bytes configuration = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.configuration_)}},
    // uint64 configuration_index = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotRequest, _impl_.configuration_index_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.configuration_index_)}},
    // int64 size = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotRequest, _impl_.size_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.size_)}},
    // bytes data = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.data_)}},
    // int64 snapshot_version = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotRequest, _impl_.snapshot_version_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.snapshot_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes leader = 3;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.leader_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 last_log_index = 4;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.last_log_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 last_log_term = 5;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.last_log_term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes peers = 6;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.peers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes configuration = 7;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.configuration_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 configuration_index = 8;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.configuration_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 size = 9;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes data = 10;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 snapshot_version = 11;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.snapshot_version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* InstallSnapshotRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InstallSnapshotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // bytes leader = 3;
  if (!this->_internal_leader().empty()) {
    const std::string& _s = this->_internal_leader();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // uint64 last_log_index = 4;
  if (this->_internal_last_log_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_last_log_index(), target);
  }

  // uint64 last_log_term = 5;
  if (this->_internal_last_log_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_last_log_term(), target);
  }

  // bytes peers = 6;
  if (!this->_internal_peers().empty()) {
    const std::string& _s = this->_internal_peers();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  // bytes configuration = 7;
  if (!this->_internal_configuration().empty()) {
    const std::string& _s = this->_internal_configuration();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // uint64 configuration_index = 8;
  if (this->_internal_configuration_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_configuration_index(), target);
  }

  // int64 size = 9;
  if (this->_internal_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_size(), target);
  }

  // bytes data = 10;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(10, _s, target);
  }

  // int64 snapshot_version = 11;
  if (this->_internal_snapshot_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_snapshot_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InstallSnapshotRequest)
  return target;
}

::size_t InstallSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InstallSnapshotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes leader = 3;
  if (!this->_internal_leader().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_leader());
  }

  // bytes peers = 6;
  if (!this->_internal_peers().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_peers());
  }

  // bytes configuration = 7;
  if (!this->_internal_configuration().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_configuration());
  }

  // bytes data = 10;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // uint64 last_log_index = 4;
  if (this->_internal_last_log_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_last_log_index());
  }

  // uint64 last_log_term = 5;
  if (this->_internal_last_log_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_last_log_term());
  }

  // uint64 configuration_index = 8;
  if (this->_internal_configuration_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_configuration_index());
  }

  // int64 size = 9;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_size());
  }

  // int64 snapshot_version = 11;
  if (this->_internal_snapshot_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_snapshot_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstallSnapshotRequest::_class_data_ = {
    InstallSnapshotRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InstallSnapshotRequest::GetClassData() const {
  return &_class_data_;
}

void InstallSnapshotRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstallSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const InstallSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:InstallSnapshotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_leader().empty()) {
    _this->_internal_set_leader(from._internal_leader());
  }
  if (!from._internal_peers().empty()) {
    _this->_internal_set_peers(from._internal_peers());
  }
  if (!from._internal_configuration().empty()) {
    _this->_internal_set_configuration(from._internal_configuration());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_last_log_index() != 0) {
    _this->_internal_set_last_log_index(from._internal_last_log_index());
  }
  if (from._internal_last_log_term() != 0) {
    _this->_internal_set_last_log_term(from._internal_last_log_term());
  }
  if (from._internal_configuration_index() != 0) {
    _this->_internal_set_configuration_index(from._internal_configuration_index());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_snapshot_version() != 0) {
    _this->_internal_set_snapshot_version(from._internal_snapshot_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallSnapshotRequest::CopyFrom(const InstallSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InstallSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallSnapshotRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InstallSnapshotRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InstallSnapshotRequest::InternalSwap(InstallSnapshotRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leader_, &other->_impl_.leader_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.peers_, &other->_impl_.peers_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.configuration_, &other->_impl_.configuration_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.snapshot_version_)
      + sizeof(InstallSnapshotRequest::_impl_.snapshot_version_)
      - PROTOBUF_FIELD_OFFSET(InstallSnapshotRequest, _impl_.rpc_header_)>(
          reinterpret_cast<char*>(&_impl_.rpc_header_),
          reinterpret_cast<char*>(&other->_impl_.rpc_header_));
}

::google::protobuf::Metadata InstallSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[8]);
}
// ===================================================================

class InstallSnapshotResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<InstallSnapshotResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_._has_bits_);
  static const ::RPCHeader& rpc_header(const InstallSnapshotResponse* msg);
  static void set_has_rpc_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::RPCHeader& InstallSnapshotResponse::_Internal::rpc_header(const InstallSnapshotResponse* msg) {
  return *msg->_impl_.rpc_header_;
}
InstallSnapshotResponse::InstallSnapshotResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InstallSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

InstallSnapshotResponse::InstallSnapshotResponse(
    ::google::protobuf::Arena* arena,
    const InstallSnapshotResponse& from)
    : ::google::protobuf::Message(arena) {
  InstallSnapshotResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rpc_header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::RPCHeader>(arena, *from._impl_.rpc_header_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, success_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::success_));

  // @@protoc_insertion_point(copy_constructor:InstallSnapshotResponse)
}
inline PROTOBUF_NDEBUG_INLINE InstallSnapshotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InstallSnapshotResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rpc_header_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, rpc_header_) +
               sizeof(Impl_::success_));
}
InstallSnapshotResponse::~InstallSnapshotResponse() {
  // @@protoc_insertion_point(destructor:InstallSnapshotResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InstallSnapshotResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rpc_header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InstallSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:InstallSnapshotResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rpc_header_ != nullptr);
    _impl_.rpc_header_->Clear();
  }
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.success_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InstallSnapshotResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> InstallSnapshotResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InstallSnapshotResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .RPCHeader rpc_header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.rpc_header_)}},
    // uint64 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallSnapshotResponse, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.term_)}},
    // bool success = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InstallSnapshotResponse, _impl_.success_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RPCHeader rpc_header = 1;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.rpc_header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 term = 2;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.term_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool success = 3;
    {PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RPCHeader>()},
  }}, {{
  }},
};

::uint8_t* InstallSnapshotResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InstallSnapshotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .RPCHeader rpc_header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rpc_header(this),
        _Internal::rpc_header(this).GetCachedSize(), target, stream);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_term(), target);
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InstallSnapshotResponse)
  return target;
}

::size_t InstallSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InstallSnapshotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RPCHeader rpc_header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rpc_header_);
  }

  // uint64 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_term());
  }

  // bool success = 3;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InstallSnapshotResponse::_class_data_ = {
    InstallSnapshotResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InstallSnapshotResponse::GetClassData() const {
  return &_class_data_;
}

void InstallSnapshotResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InstallSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const InstallSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:InstallSnapshotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rpc_header()->::RPCHeader::MergeFrom(
        from._internal_rpc_header());
  }
  if (from._internal_term() != 0) {
    _this->_internal_set_term(from._internal_term());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallSnapshotResponse::CopyFrom(const InstallSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InstallSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallSnapshotResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InstallSnapshotResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InstallSnapshotResponse::InternalSwap(InstallSnapshotResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.success_)
      + sizeof(InstallSnapshotResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(InstallSnapshotResponse, _impl_.rpc_header_)>(
          reinterpret_cast<char*>(&_impl_.rpc_header_),
          reinterpret_cast<char*>(&other->_impl_.rpc_header_));
}

::google::protobuf::Metadata InstallSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transport_2eproto_getter, &descriptor_table_transport_2eproto_once,
      file_level_metadata_transport_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
